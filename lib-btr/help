#!/usr/bin/env bash

__print_help () {
cat << __EOH__
NAME
    butter is a btrfs snapshot manager.

SYNOPSIS
    butter [-d] add MOUNTPOINT[,...] [TYPE]
    butter [-d] bootstrap
    butter [-d] create MOUNTPOINT [PROP VALUE [...]]
    butter [-d] destroy MOUNTPOINT
    butter [-d] list
    butter [-d] remove MOUNTPOINT [TYPE]
    butter [-d] snaplist
    butter [-d] snapshot MOUNTPOINT[,...]|ALL [PROP VALUE [...]]
    butter [-d] snapremove MOUNTPOINT[,...] [COUNT [PROP VALUE [...]]]
    butter [-d] set MOUNTPOINT[,...] PROP VALUE [...]
    butter [-d] get [-H] [-o values] MOUNTPOINT[,...] PROP [PROP [...]]
    butter [-d] help
    butter [-d] helpconfig
    butter [-d] hier
    butter [-d] find [PROP VALUE [...]]

DESCRIPTION
    butter manages snapshots and retention, while making extensive use of extended
    attributes.

    butter -d [COMMAND [ARGS...]]

        Run butter in debug mode (bash(1)'s set -x)

    butter add MOUNTPOINT [TYPE]

        Adds a mountpoint to the default settings for a given type of snapshot.
        See also butter remove.

        Example:

        After issuing the following command,
          # butter add /,/home,/var hourly
        This next command will snapshot /, /home and /var
          # butter snapshot ALL type hourly

    butter bootstrap

        Tells you what to do to get started.  Will certainly get dropped.

        Typically, you should do this first:
          # mkdir -p \$butter_root
          # mount -osubvol=/ \$butter_root
          # mkdir -p \$butter_root/\$butter_host

        Default values are:
          o \$butter_root=/mnt/butter
          o \$butter_host=\$(\< /etc/machine-id) with systemd
          o \$butter_host=\$(uname -n) without systemd

    butter create MOUNTPOINT [PROP VALUE [...]]

        Will create a btrfs(8) subvolume in the butter root and set some initial
        values, as well as default values for the following properties:

          o mountpoint (obviously)
          o snapshot.default.max (defaults to 5)
          o uuid
          o snapshot.is (must be "0")

        The subvolume will be created inside the butter root and will not be
        mounted.

        Examples:

          # butter create / snapshot.hourly.max 24 snapshot.daily.max 7
          # butter create /home snapshot.default.max 10

    butter destroy MOUNTPOINT

        Will delete all subvolumes that have the given mountpoint (snapshots
        too) that live under the butter root

        Example:

          # butter destroy /var

    butter snapconfig

        Shows snapshot type and mountpoints configuration, created using add
        and remove.
        It is useful to use it before issuing a snapshot command to "ALL".

        Example:

          # butter snapconfig
          TYPE     MOUNTPOINT
          daily    /
          daily    /home
          daily    /var
          default  /var
          default  /

    butter remove MOUNTPOINT[,...] [TYPE]

        Removes a mountpoint from the default list for a given snapshot type.
        See also butter add.

        Example:
          # butter remove /var yearly

    butter snaplist

        Lists all snapshots.  Does not show subvolumes.

    butter snapshot MOUNTPOINT|ALL [PROP VALUE [...]]

        Take a snapshot and set some properties, as well as some default values
        for the following properties:

          o snapshot.type (defaults to "default")
          o snapshot.is (must be "1")
          o snapshot.timestamp
          o uuid

        Examples:

        Snapshot /var/log with type "manual" and a comment
          # butter snapshot /var/log type manual comment "first shot at butter"

        Simply snapshot /home
          # butter snapshot /home

        Snapshot all subvolumes that must (see butter add) for a given type:
          # butter snapshot ALL type daily

    butter snapremove MOUNTPOINT [COUNT [PROP VALUE [...]]]

        Removes a number of old snapshots, given some conditions.
        COUNT defaults to "5".
        snapremove will delete the snpashots with the smallest
        snapshot.timestamp values first.

        Examples:

        Remove the 2 oldest snapshots of /
          # butter snapremove / 2

        Remove the 5 oldest "hourly" snapshots of / and /home (10 total)
          # butter snapremove /,/home 5 snapshot.type hourly

    butter set MOUNTPOINT PROP VALUE [...]

        Set some properties.
        The submitted properties must be validated by butter
        Arbitrary properties can be set with the "custom." prefix.
        Some properties are read-only and you should not attempt to modify
        them, such as:

          o snapshot.is
          o mountpoint
          o uuid

        Example:

        Set the default maximum number of snapshots for /var/log
          # butter set /var/log snapshot.default.max 3

    butter get [-H] [-o values] MOUNTPOINT PROP [PROP [...]]

        Get some properties in a nice table.

        Options:

          o -H: suppress headers
          o -o values: only print values

        Example:

          # butter get / uuid snapshot.default.max
          # butter get -H /var/log snapshot.daily.max

    butter help

        Display this help text

    butter helpconfig

        Display the butterrc(5) help text

    butter hier

        Display the butter(7) help text

    butter find [PROP VALUE [...]]

        Find snapshots or subvolumes that match PROP=VALUE for submitted
        properties and values.

        Example:

        Find snapshots with type "foo"
          # butter find snapshot.is 1 snapshot.type foo

SEE ALSO
    butter(7), butterrc(5)
__EOH__
}

__cmd_helpconfig () {
    cat << __EOH__
NAME
    butterrc - butter configuration

SYNOPSIS
    Set some global variables for butter.

DESCRIPTION
    butterrc is a bash shell script that will be sourced after butter sets its
    built-in global variables.

PATHS
    butter_root

      This is where your btrfs root should be mounted.

      default value is /mnt/butter.

    butter_host

      This will identify your host in the \$butter_root folder.

      default value is either:
        o The value of /etc/machine-id; should the file exist
        o The output of \`uname -n\`

PROPERTIES
    butter_prop_prefix

      This will be used for all properties used by butter.  It must begin with
      "^user." (see xattr(7)).

      default value is "user.be.popho.butter"

    default_max_snapshots

      This number is the default number of snapshots to keep for any given
      subvolume.  If there are no specific instructions given to butter(8)
      while snapshotting, this number will be used.

      default value is "5"

    default_rm_snapshots

      This number is the default number of snapshots to remove when using
      \`butter snapremove\`, if no specific instructions are given.

      default value is "1"

    butter_prop_array

      This array contains a list of allowed properties to set on the different
      subvolumes that butter will handle.

SEE ALSO
    butter(8), butter(7)

__EOH__
}

__cmd_print_hierarchy () {
    cat << __EOH__
NAME
    butter - butter file hierarchy

DESCRIPTION
    Because butter handles btrfs subvolumes, snapshot, and also, maybe one day,
    remote send/receive, we need to setup some things.

    /mnt/butter - butter_root
      This is where butter directories and others live. This can be set with
      butterrc(5)

    contents of /etc/machineid or output of \`uname -r\` - butter_host
      There should be a directory inside \$butter_root per host that butter(8)
      will manage.

      Examples:
        o /mnt/butter/c9865490735f4d0d825aaaab0dfaa6b0/
        o /mnt/butter/toxoplasmosis/

    btrfs UUID
      We use UUIDs for each btrfs filesystem that butter(8) will manage.
      FYI, you can use \`lsblk -fl|awk '{ if ($2 ~ "btrfs") print $3 }'\` to
      find said UUIDs.  There, we mount the btrfs filesystems with the
      appropriate UUID with the \`-o subvol=/\` option.

      Example:
        o /mnt/butter/c9865490735f4d0d825aaaab0dfaa6b0/ec627755-028e-4724-a25b-7b7062dede45

    __butter
      Then, to avoid polluting the root of the btrfs filesystem, we isolate
      butter's snapshot in their own directory.  This folder typically holds
      numerous snapshots, that can be hard to navigate.  Use \`butter snaplist\`
      to find out what's what.

    <mountpoint>@uuid
      A typical butter subvolume.  Should curiosity get the best of you, use
      getfattr(1) to dump extended attributes.

SEE ALSO
    butter(8), butterrc(5)
__EOH__
}
