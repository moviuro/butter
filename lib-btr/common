#!/usr/bin/env bash

__fatal () {
    printf '%s\n!! %s\n' "Fatal error" "$1"
    exit 2
}

__info () {
    printf '%s\nII %s\n' "Information" "$1"
}

__get () {
    getfattr --only-values --name "$1" "$2" 2>/dev/null
}

__set () {
    setfattr --name "$1" --value "$2" "$3"
}

__get_one_prop () {
    local _prop _path

    _prop="$1"
    _path="$2"

    __require_in_props "$_prop"
    __get "$butter_prop_prefix"."$_prop" "$butter_root"/"$_path"
}

__set_one_prop () {
    local _prop _value _path

    _prop="$1"
    _value="$2"
    _path="$3"

    __require_in_props "$_prop"
    __set "$butter_prop_prefix"."$_prop" "$_value" "$butter_root"/"$_path"
}

__require_in_props () {
    local _prop _found _item

    _prop="$1"
    _found=0

    for _item in "${butter_prop_array[@]}"; do
        if [[ "$_item" == "$_prop" ]]; then
            _found=1
            continue
        fi
    done

    (( _found )) ||  __fatal "Unknown property: $_prop"
}

__escape () {
    # TODO: better escaping function? (systemd-independant)
    systemd-escape "$1"
}

__find_path () {
    local _mountpoint _found _subvol

    _mountpoint="$1"
    _found=0

    for _subvol in "$butter_root/$butter_host/"*; do
        if [[ "$(__get "$butter_prop_prefix".mountpoint "$_subvol")" ==\
          "$_mountpoint" ]]; then
            printf '%s\n' "$_subvol"
            return
        fi
    done

    (( _found )) || __fatal "Couldn't find path to $_mountpoint"
}
